#!/usr/bin/env node

var cmd = require('commander')
  , prompt = require('cli-prompt')
  , kafs = require('../')
  , spawn = require('child_process').spawn
  , cli = kafs.cli
  , setup = cli.setup

cmd
  .version(require('../package.json').version)
  .description(require('../package.json').description)
  .option('-k, --keyring <path>', 'Path to keyring volume (default: ~/.kafs/_keyring or env.KAFS_KEYRING)')
  .option('-v, --volume <path>', 'Volume path (default: ~/.kafs/default or env.KAFS_VOLUME)')

cmd
  .command('init [path]')
  .description('Create a new volume at the given path')
  .option('--keypair', 'Generate a keypair for the new volume')
  .option('--passphrase', 'Encrypt private key with a passphrase')
  .action(setup(function (path, opts) {
    cli.init(path, opts, function (err, vol) {
      if (err) throw err;
      console.log('+', vol.id, vol.path());
    });
  }))

cmd
  .command('info')
  .description('Get info about the volume')
  .action(setup(function (opts) {
    cli.info(opts, function (err, vol) {
      if (err) throw err;
      console.log(JSON.stringify(vol, null, 2));
    });
  }))

cmd
  .command('mount [src] <dest>')
  .description('Mount the volume')
  .option('-r, --readonly', 'Mount read-only')
  .action(setup(function (src, dest, opts) {
    console.log('mount!', src, dest);
  }))

cmd
  .command('export <dest>')
  .description('Export the volume contents')
  .option('--exclude <glob>', 'Exclude paths matching glob')
  .option('--include <glob>', 'Include paths matching glob')
  .action(setup(function (dest, opts) {
    console.log('export!', dest);
  }))

cmd
  .command('import <src>')
  .description('Import the contents of a directory into the volume')
  .option('--exclude <glob>', 'Exclude paths matching glob')
  .option('--include <glob>', 'Include paths matching glob')
  .action(setup(function (src, opts) {
    console.log('import!', src);
  }))

cmd
  .command('server')
  .description('Expose volume via HTTP server')
  .option('-p, --port', 'Port to listen on')
  .option('-r, --root', 'Virtual root path')
  .action(setup(function (opts) {
    console.log('server!');
  }))

cmd
  .command('destroy')
  .description('Destroy the volume')
  .option('-f, --force', 'Force destruction without prompting')
  .action(setup(function (opts) {
    console.log('destroy!');
  }))

cmd
  .command('add-key <key>')
  .description('Add a key to the keyring. Will read STDIN if no argument specified')
  .action(setup(function (arg, opts) {
    console.log('add-key!');
  }))

cmd.parse(process.argv);

if (typeof cmd.args[cmd.args.length - 1] === 'string') cmd.help();
if (!cmd.args.length) {
  cli.setup(function () {
    cmd.help();
  })(cmd);
}
